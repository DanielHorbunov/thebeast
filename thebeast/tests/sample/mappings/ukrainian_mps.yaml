id: ukrainian_mps
# ftm_ontology: # Again optional path to the directory with ftm

meta:
  comments: Optional comments on the data source
  author: Dmytro Chaplynskyi
  created: "2022-06-20T20:19:00.1Z"
  modified: "2022-06-20T20:19:00.1Z"

ingest:
  cls: thebeast.ingest.TSVDictGlobReader
  params:
    input_uri: thebeast/tests/sample/csv/rada*.tsv
digest:
  collections:
    root:
      path: "[@]"   # Wrap each record into the list
      entities:
        ukrainian_mp_person:  # Also serves as a key_prefix for id and to reference other entites.
                              # Must be unique
          schema: Person
          keys:
            - entity.name  # keys can be both, generated fields of the entity and the jmespath over the record
          properties:
            name:
              column: name
              transformer: thebeast.contrib.transformers.mixed_charset_fixer
              augmentor: thebeast.contrib.transformers.names_transliteration
            title:
              literal: "Народний депутат"
            firstName:
              column: name
              regex: ^\s*[^\s]{2,}\s+([^\s]{2,})\s*
            lastName:
              column: name
              regex: ^\s*([^\s]{2,})\s*
            fatherName:
              column: name
              regex: ^\s*[^\s]{2,}\s+[^\s]{2,}\s+([^\s]{2,})\s*
            wikipediaUrl:
              column: link
            sourceUrl:
              column: link
            keywords:
              column: name
              regex_split: \s+
            political:
              column: party
            alias:
              -
                template: "{{ entity.firstName[0] }} {% if entity.fatherName %}{{ entity.fatherName[0] }} {% endif %}{{ entity.lastName[0] }}"
              -
                template: "{{ entity.firstName[0] }} {{ entity.lastName[0] }}"
        ukrainian_mp_membership:
          schema: Membership
          keys:
            - record.name
            - record.date_from
            - record.date_to
          properties:
            startDate:
              # TODO: dates parsing
              column: date_from
              transformer: thebeast.contrib.transformers.anydate_parser
            endDate:
              column: date_to
              transformer: thebeast.contrib.transformers.anydate_parser
            organization:
              entity: verkhovna_rada
            member:
              entity: ukrainian_mp_person
            role:
              literal: "Народний депутат"
  constant_entities:    # Entities that should be generated not from the data but from the nature of data source
    verkhovna_rada:
      schema: PublicBody
      keys:
        - entity.taxNumber
      properties:
        name:
          -
            literal: Верховна Рада України
          -
            literal: ВРУ
        jurisdiction:
          literal: Ukraine
        mainCountry:
          literal: Ukraine
        taxNumber:
          literal: 20064120
        country:
          literal: Ukraine
        wikipediaUrl:
          literal: https://uk.wikipedia.org/wiki/Верховна_Рада_України
        website:
          literal: https://www.rada.gov.ua
        phone:
          literal: 044 255 4246
        incorporationDate:
          literal: 1990
        addressEntity:
          # To link to another entity you have to specify the entity name
          # as an `entity`. You can only reference entity of the current collection
          # or an entity of one of it's parent collections or a constant entity (for now)
          entity: verkhovna_rada_address
    verkhovna_rada_address:
      schema: Address
      keys:
        - entity.country
        - entity.full
      properties:
        full:
          literal: 01008, м. Київ, вул. М. Грушевського, 5
        street:
          literal: вул. М. Грушевського, 5
        postalCode:
          literal: 01008
        country:
          literal: Ukraine
dump:
  cls: thebeast.dump.FTMLinesWriter
  params:
    # Just stdout it, so we can pipe it into the next tool
    output_uri: "-"